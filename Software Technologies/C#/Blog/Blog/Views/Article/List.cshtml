@model Blog.Models.ArticleListViewModel

@{
    ViewBag.Title = "List";
}

<div class="container">
    <div class="row">
        @for (int i = 0; i < Model.Articles.Count; i++)
        {
            if (i % 2 == 0 && i != 0)
            {
                <div class="row"></div>
            }
            <div class="col-sm-6 pt-20">
                <article>
                    <header>
                        <h3>
                            @Html.ActionLink(@Model.Articles[i].Title, "Details", "Article", new { @id = Model.Articles[i].Id }, null)
                        </h3>
                    </header>
                    <p>
                        @Model.Articles[i].Summary
                    </p>
                    <footer class="author">
                        <small class="pull-left">
                            @Model.Articles[i].DateCreated.ToString("dd.MM.yyyy")
                        </small>
                        <small class="pull-right">
                            --author @Html.ActionLink(Model.Articles[i].Author.FullName, "List", "Article", new { @authorId = Model.Articles[i].Author.Id }, null)
                        </small>
                    </footer>
                </article>
            </div>
        }
    </div>

    <div class="text-center mt-50">
        @if (Model.CurrentPage != 1)
        {
            @Html.ActionLink("| <", "List", new { filterArgs = Model.FilterArgs }, new { @class = "btn-default badge page-links" })
            @Html.ActionLink("<<", "List", new { page = Model.CurrentPage - 1, filterArgs = Model.FilterArgs }, new { @class = "btn-default badge page-links" })
        }
        
        @{
            var numbersCount = Model.PagesCount <= 3 ? Model.PagesCount : 5;
            var pageNumber = Model.CurrentPage <= 2 ? 1 : Model.CurrentPage - 2;
            while (numbersCount > 0 && pageNumber <= Model.PagesCount)
            {
                @Html.ActionLink($"{pageNumber}", "List", new { page = pageNumber, filterArgs = Model.FilterArgs }, new { @class = $"btn-default badge page-links {(Model.CurrentPage == pageNumber ? "active" : string.Empty)}" })
                numbersCount--;
                pageNumber++;
            }
        }

        @if (Model.CurrentPage != Model.PagesCount)
        {
            @Html.ActionLink(">>", "List", new { page = Model.CurrentPage + 1 }, new { @class = "btn-default badge page-links" })
            @Html.ActionLink("> |", "List", new { page = Model.PagesCount, filterArgs = Model.FilterArgs }, new { @class = "btn-default badge page-links" })
        }

        <div class="small">
            Showing @Model.FirstPostOnPage to
            @if (Model.CurrentPage != Model.PagesCount)
            {
                @Model.LastPostOnPage @:out of
            }

            @Model.TotalPostsCount posts
        </div>
    </div>

</div>
<hr />
